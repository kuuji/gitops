apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gofun
  # You'll usually want to add your resources to the argocd namespace.
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/image-list: gofun=ghcr.io/kuuji/project/app
    argocd-image-updater.argoproj.io/gofun.allow-tags: regexp:^pre-production-.*$
    argocd-image-updater.argoproj.io/gofun.helm.image-spec: containers[0].image
    argocd-image-updater.argoproj.io/gofun.pull-secret: pullsecret:argocd/gh-registry-secret
    argocd-image-updater.argoproj.io/gofun.update-strategy: latest
spec:
  # The project the application belongs to.
  project: kuuji

  # Source of the application manifests
  source:
    repoURL: https://charts.devspace.sh
    targetRevision: 0.8.4
    chart: component-chart
    # helm specific config
    helm:

      # Release name override (defaults to application name)
      releaseName: gofun
      valueFiles:
      - cm://kuuji/go-fun-values
      # Values file as block file
      values: |
        containers:
        - image: ghcr.io/kuuji/project/app:GaGhtgD
          livenessProbe:
            httpGet:
              path: /
              port: 8080
          readinessProbe:
            httpGet:
              path: /
              port: 8080
        annotations:
          link.argocd.argoproj.io/external-link: https://gofun.byeon.ca
        service:
          ports:
          - port: 8080
            name: http
        pullSecrets:
        - gh-registry-secret
        replicas: 1
        rollingUpdate:
          enabled: true
          maxSurge: "50%"
          maxUnavailable: "30%"
  # Destination cluster and namespace to deploy the application
  destination:
    server: https://kubernetes.default.svc
    namespace: kuuji

  # Sync policy
  syncPolicy:
    # automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
    #   prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
    #   selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
    #   allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.

