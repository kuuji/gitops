apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # Argo CD's externally facing base URL (optional). Required when configuring SSO
  url: https://argocd.byeon.ca

  # Enables application status badge feature
  statusbadge.enabled: "true"

  # Enables anonymous user access. The anonymous users get default role permissions specified argocd-rbac-cm.yaml.
  users.anonymous.enabled: "true"
  # Specifies token expiration duration
  users.session.duration: "24h"

  # Specifies regex expression for password
  # passwordPattern: "^.{8,32}$"

  # # Enables google analytics tracking is specified
  # ga.trackingid: "UA-12345-1"
  # # Unless set to 'false' then user ids are hashed before sending to google analytics
  # ga.anonymizeusers: "false"

  # the URL for getting chat help, this will typically be your Slack channel for support
  # help.chatUrl: "https://mycorp.slack.com/argo-cd"
  # the text for getting chat help, defaults to "Chat now!"
  # help.chatText: "Chat now!"

  # A dex connector configuration (optional). See SSO configuration documentation:
  # https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/sso
  # https://dexidp.io/docs/connectors/
  # dex.config: |
  #   connectors:
  #     # GitHub example
  #     - type: github
  #       id: github
  #       name: GitHub
  #       config:
  #         clientID: aabbccddeeff00112233
  #         clientSecret: $dex.github.clientSecret
  #         orgs:
  #         - name: your-github-org
  #           teams:
  #           - red-team
  #   # It is possible to provide custom static client for dex if you want to reuse it
  #   # with other services
  #   # staticClients:
  #   # - id: argo-workflow
  #   #   name: Argo Workflow
  #   #   redirectURIs:
  #   #     - https://argo/oauth2/callback
  #   #   secret: $secretReference

  # OIDC configuration as an alternative to dex (optional).
  # oidc.config: |
  #   name: Okta
  #   issuer: https://dev-123456.oktapreview.com
  #   clientID: aaaabbbbccccddddeee
  #   clientSecret: $oidc.okta.clientSecret
  #   # Optional set of OIDC scopes to request. If omitted, defaults to: ["openid", "profile", "email", "groups"]
  #   requestedScopes: ["openid", "profile", "email"]
  #   # Optional set of OIDC claims to request on the ID token.
  #   requestedIDTokenClaims: {"groups": {"essential": true}}

  # # disables admin user. Admin is enabled by default
  # admin.enabled: "false"
  # # add an additional local user with apiKey and login capabilities
  # #   apiKey - allows generating API keys
  # #   login - allows to login using UI
  # accounts.alice: apiKey, login
  # # disables user. User is enabled by default
  # accounts.alice.enabled: "false"

  # The location of optional user-defined CSS that is loaded at runtime.
  # Local CSS Files:
  # - If the supplied path is to a file mounted on the argocd-server container, that file should be mounted
  #   within a subdirectory of the existing "/shared/app" directory (e.g. "/shared/app/custom").  Otherwise,
  #   the file will likely fail to be imported by the browser with an "incorrect MIME type" error.
  # - The path should be specified relative to the "/shared/app" directory; not as an absolute path.
  # Remote CSS Files:
  # - Files may also be loaded from remote locations via fully qualified URLs.
  # ui.cssurl: "./custom/my-styles.css"

  # An optional user-defined banner message that's displayed at the top of every UI page.
  # Every time this is updated, it will clear a user's localStorage telling the UI to hide the banner forever.
  # ui.bannercontent: "Hello there!"
  # Optional link for banner. If set, the entire banner text will become a link.
  # You can have bannercontent without a bannerurl, but not the other way around.
  # ui.bannerurl: "https://argoproj.github.io"

  # Application reconciliation timeout is the max amount of time required to discover if a new manifests version got
  # published to the repository. Reconciliation by timeout is disabled if timeout is set to 0. Three minutes by default.
  # > Note: argocd-repo-server deployment must be manually restarted after changing the setting.
  timeout.reconciliation: 60s
